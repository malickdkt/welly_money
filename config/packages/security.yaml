security:
    encoders:
        App\Entity\User:
            algorithm: auto

    role_hierarchy:    
        ROLE_SUPER_ADMIN: [ROLE_ADMIN,ROLE_CAISSIER]
        ROLE_ADMIN: [ROLE_CAISSIER]
    
    access_control:	
        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/resetting, role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin, role: ROLE_USER }    

    providers:
        entity_provider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern:  ^/login
            stateless: true
            anonymous: true
            json_login:
                check_path: /login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

    

        api:
             pattern:  ^/api
             stateless: true
             anonymous: true
             provider: entity_provider
             guard:
                 authenticators:
                     - lexik_jwt_authentication.jwt_token_authenticator

    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
       # - { path: ^/api, roles: IS_AUTHENTICATED_FULLY  }
        - { path: ^/docs, roles: IS_AUTHENTICATED_ANONYMOUSLY  }
